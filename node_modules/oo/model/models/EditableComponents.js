let Parent = require('./Model');

class EditableComponents extends Parent {

    constructor() {
        super();
    }

    async init() {
        await super.init();
    }


    getFields(){
        this.__singleton = true;
        this.__schemaSetting = true;
        return {
            ProductCard: {type: 'component'},
            FavoriteCard: {type: 'component'},
            CategoryItem: {type: 'component'},
            MainItems: {type: 'component'},
            ItemCard: {type: 'component'},
        };
    }

    getSchemaName(){
        return 'SchemaEditableComponents';
    }

    registerSchema(Vue){
        let self = this;
        const q = require ('quasar');
        let t = `
        <q-card flat bordered style = '
        height: 85vh;'>
        <q-item>
            <q-item-section>
                <component 
                    :is="Component.type"
                    v-bind='Component'
                    v-model='Component.value'
                />
            </q-item-section>
        </q-item>

        <q-separator />

        <q-card-section horizontal>

            <q-card-section class='col-4 full-height'>
                <div style = 'height: 70vh;'>
                    <component 
                        :is="Editor.type"
                        v-bind='Editor'
                        v-model='Editor.value'
                    />
                </div>
                <q-btn
                    color="primary" label="Save" @click="save" class='center' style='   margin: auto;
                                                                                        width: 30%;
                                                                                        border: 3px solid;
                                                                                        padding: 10px;
                                                                            ' />
                <q-btn
                color="primary" label="Restore" @click="restore" class='center' style='   margin: auto;
                                                                                    width: 30%;
                                                                                    border: 3px solid;
                                                                                    padding: 10px;
                                                                        ' />
                <q-btn
                color="primary" label="preview" @click="preview" class='center' style='   margin: auto;
                                                                                    width: 30%;
                                                                                    border: 3px solid;
                                                                                    padding: 10px;
                                                                        ' />
            </q-card-section>

                <q-separator vertical />
      
                <q-card-section class="col-4" >
                    <component ref = 'Comp' :is='CurrentComponent' style='width:100%; margin:15px; padding:15px;'/>
                </q-card-section >
        
        </q-card-section>
    </q-card>
        `;
        Vue.component('SchemaEditableComponents', {
            template: t,
            components: {...q, editor: require('vue2-ace-editor')},
            name: 'SchemaEditableComponents',
            props: {
            },
            data () {
                return {
                    Component:
                        {field: 'Component', value: undefined, readonly: false, required: true, 
                            linkto: Object.keys(self.getFields()), type: 'set', multiple:false},
                    Editor:
                            {field: 'Editor', value: undefined, readonly: false, required: true, 
                                type: 'textareas'},
                    CurrentComponent: ''
                };
            },
            watch: {
                'Component.value' : function (){
                    this.CurrentComponent = this.Component.value;
                },
                CurrentComponent: function () {
                    if (!this.CurrentComponent) return this.Editor.value = undefined;
                    this.Editor.value = Vue.component(this.CurrentComponent).options.template;
                }
            },
            methods: {
                save: async function () {
                    if (!this.CurrentComponent) return;
                    self[this.CurrentComponent] = this.Editor.value;
                    let res = await self.save();
                },
                restore: async function () {
                    if (!this.CurrentComponent) return;
                    self[this.CurrentComponent] = undefined;
                    let res = await self.save();
                },
                preview: async function () {
                    this.$errorResponse('Disabled');
                }
            },
            mounted () {
            }
        });
    }


}

module.exports = EditableComponents;