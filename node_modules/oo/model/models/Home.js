let Parent = require('./Model');

class Home extends Parent {

    constructor() {
        super();
    }

    async init() {
        await super.init();
    }

    getFields(){
        this.__singleton = true;
        return {
            Title: {type: 'string'},
            PrimaryColor: {type: 'component'},
            ShowFooter: {type: 'boolean'},
            HeaderImage: {type: 'component', tab: 'Image'},
            ShowContactButton: {type: 'boolean', required: false, tab: 'Contact'},
            ContactButtonSocial: {type: 'set', linkto:["WhatsApp", "Facebook", "Twitter"], required: false, tab: 'Contact'},
            ContactButtonLink: {type: 'string', required: false, tab: 'Contact'},
            Facebook: {type: 'string', required: false, tab: 'Social'},
            Twitter: {type: 'string', required: false, tab: 'Social'},
            Instagram: {type: 'string', required: false, tab: 'Social'},
        };
    }

    registerPrimaryColorField(Vue,field){
        let self = this;
        const q = require ('quasar');
        let t = `
        <q-input
        filled
        hint = 'Primary Color'
        v-model="color"
        class="my-input"
        >
        <template v-slot:append>
          <q-icon name="colorize" class="cursor-pointer">
            <q-popup-proxy transition-show="scale" transition-hide="scale">
              <q-color v-model="color" />
            </q-popup-proxy>
          </q-icon>
        </template>
        </q-input>
        `;
        Vue.component('Field'+field, {
            template: t,
            components: {...q},
            name: 'Field'+field,
            props: {
                value: {
                    type: String
                }
            },
            model: {
                prop: 'v-model',
                event: 'input'
            },
            data() {
                return {
                    color:''
                };
            },
            watch: {
                color: function () {
                    this.$emit('input', this.color);
                }
            },
            methods: {
            },
            mounted() {
                this.color = this.$store.state.home[0].PrimaryColor || '#1976D2';
            }
        });
    }

    registerComponent(Vue,field){
        if (field === 'HeaderImage') this.registerImageUploader(Vue,field);
        if (field === 'PrimaryColor') this.registerPrimaryColorField(Vue,field);
    }

}

module.exports = Home;