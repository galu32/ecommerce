let Parent = require('./Model');

class Item extends Parent {

    constructor() {
        super();
    }

    async init() {
        await super.init();
    }

    getFields(){
        return {
            Code: {type: 'string', required: true},
            Name: {type: 'string', required: true},
            Image: {type: 'component', required: true, tab: 'Image'},
            HomePage: {type: 'boolean', required: true},
            Categories: {type: 'set', required: true, linkto: 'Categories'},
            SubCategories: {type: 'set', required: false, linkto: 'SubCategories'},
            Description: {type: 'textareas', required: false},
            Price: {type: 'value', required: true}
        };
    }

    getUniqueFields(){
        return [
            'Code'
        ];
    }

    registerImageUploader(Vue,field){
        let self = this;
        const q = require ('quasar');
        let t = `
        <q-uploader
        style="max-width: 300px"
        url="http://localhost:4444/upload"
        label="Restricted to images"
        multiple
        accept=".jpg, image/*"
      />
        `;
        Vue.component('Field'+field, {
            template: t,
            components: {...q},
            name: 'Field'+field,
            props: {
            },
            data() {
                return {
                };
            },
            watch: {
            },
            methods: {
            },
            mounted() {
            }
        });
    }

    registerComponent(Vue,field){
        if (field === 'Image') this.registerImageUploader(Vue,field);
    }

}

module.exports = Item;